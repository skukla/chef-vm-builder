require_relative '../core/lib/config'
require_relative '../core/lib/demo_structure'
require_relative '../core/handlers/system_handler'
require_relative '../core/handlers/validation_handler'
require_relative '../core/handlers/entry_handler'

SystemHandler.clear_screen
ValidationHandler.config_json_structure
ValidationHandler.composer_credentials
ValidationHandler.base_website
ValidationHandler.build_action
ValidationHandler.plugins
ValidationHandler.data_packs
ValidationHandler.csc_credentials

Vagrant.configure('2') do |config|
	config.ssh.insert_key = false
	config.ssh.forward_agent = true
	config.vm.box = Config.value('remote_machine/box')
	config.vm.define Config.value('remote_machine/name') do |machine|
		machine.vm.network 'private_network', ip: Config.value('vm/ip')
		machine.vm.hostname = DemoStructure.base_url
	end
	config.hostsupdater.aliases = DemoStructure.additional_urls

	config.vm.provider 'virtualbox' do |machine|
		machine.gui = false
		machine.linked_clone = false
		machine.default_nic_type = '82543GC'
		machine.customize [
				'modifyvm',
				:id,
				'--name',
				Config.value('vm/name'),
				'--memory',
				Config.value('remote_machine/memory'),
				'--cpus',
				Config.value('remote_machine/cpus'),
				'--vram',
				Config.value('remote_machine/vram'),
				'--vrde',
				Config.value('remote_machine/remote_display'),
		                  ]
	end

	config.trigger.before %i[up reload provision] do |trigger|
		trigger.name = 'Copying items to VM and creating environment file'
		trigger.ruby do
			EntryHandler.copy_entries
			EntryHandler.clean_up_hidden_files
			EntryHandler.create_environment_file
		end
	end

	config.vm.provision 'chef_zero' do |chef|
		chef.version = Config.value('provisioner/version').chomp
		chef.nodes_path = 'nodes'
		chef.environments_path = 'environments'
		chef.roles_path = 'roles'
		chef.cookbooks_path = 'cookbooks'
		chef.environment = 'vm'
		chef.add_role 'main'
		chef.arguments = '--chef-license accept'
	end
end
