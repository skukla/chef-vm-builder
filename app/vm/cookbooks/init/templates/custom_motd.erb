#!/bin/bash

# Set terminal color variables
export TERM=xterm-256color
BOLD=$(tput bold)
REG=$(tput sgr0)
MAGENTA=$(tput setaf 5)
CYAN=$(tput setaf 6)
GREEN=$(tput setaf 2)
RED=$(tput setaf 1)

# ERB Variables
provider="<%= @provider %>"
ip="<%= @ip %>"
hosts=<%= "#{@hosts.join(" ")}" %>
base_url="<%= @storefront_urls[0] %>"
admin_url=<%= "#{@admin_url}" %>
storefront_urls=<%= @storefront_urls.join(' ') %>
php_version="<%= @php_version %>"
<% if @search_engine_type == "elasticsearch" %>
es_host="<%= @search_engine_host[:value] %>"
es_port="<%= @search_engine_port[:value] %>"
<% end %>

# Define functions
rule () {
    printf -v _hr "%*s" $(tput cols) && echo ${_hr// /${1--}}
}

rulem ()  {
    printf -v _hr "%*s" $(tput cols) && echo -en ${_hr// /${2--}} && echo -e "\r\033[2C$1"
}

print_kv_pair() {
    printf '%-23s : %s\n' "$1" "$2"
}

print_section_header() {
    rulem "[ ${CYAN}$1${REG} ]"
    printf '\n'
}

print_restart_msg() {
    local text="$1"
    local service="$2"

    if [ "$provider" = "virtualbox" ] && [ "$service" = "elasticsearch" ]; then
        printf '%s %s to restart' "Exit the VM and use" "${MAGENTA}${text}${REG}"
    else
        printf '%s %s to restart' "Use" "${MAGENTA}${text}${REG}"
    fi
}

get_mailhog_port() {
    local port
    port=$(sudo ss -ltnp | awk '/mailhog/ {sub(/.*:/,"",$4); print $4}' | sort -n | tail -1)
    echo "$port"
}

check_service() {
    local service="$1"
    local message="$2"
    
    if [ "$provider" = "virtualbox" ] && [ "$service" = "elasticsearch" ]; then
        # Check Elasticsearch status via curl
        if curl -sSf "http://${es_host}:${es_port}" >/dev/null; then
            echo "${GREEN}[RUNNING]${REG}"
        else
            echo "${RED}[NOT RUNNING]${REG} $message"
        fi
    else
        # Check other services using systemctl
        if systemctl is-active --quiet "$service"; then
            echo "${GREEN}[RUNNING]${REG}"
        else
            echo "${RED}[NOT RUNNING]${REG} $message"
        fi
    fi
}

calculate_dots() {
    local service_length=${#1}
    local dots_length=$((30 - service_length))
    dots=$(printf "%-${dots_length}s" "." | tr ' ' '.')
    echo "$dots"
}

print_dots() {
    local dots=$1
    echo "$dots"
}

display_service_status() {
    local service_name="$1"
    local service_cmd="$2"
    local dots="$(calculate_dots "$service_name")"
    local restart_msg

    # Determine restart message based on service name and command
    case "$service_name-$service_cmd" in
        <% if @provider == "virtualbox" %>
        "Elasticsearch-elasticsearch")
            restart_msg="$(print_restart_msg "brew services start elasticsearch-full" "elasticsearch")"
            ;;
        <% else %>
        "Elasticsearch-elasticsearch")
            restart_msg="$(print_restart_msg "start-elasticsearch" "elasticsearch")"
            ;;
        <% end %>
        "PHP-php"*"-fpm")
            restart_msg="$(print_restart_msg "start-php" "")"
            ;;
        "Webserver-nginx")
            restart_msg="$(print_restart_msg "start-web" "")"
            ;;
        "Database-mysql")
            restart_msg="$(print_restart_msg "start-db" "")"
            ;;
        "File Share-smbd")
            restart_msg="$(print_restart_msg "start-samba" "")"
            ;;
        "Mailbox-mailhog")
            restart_msg="$(print_restart_msg "start-mailhog" "")"
            ;;
        *)  # Default restart message if no match found
            restart_msg="Use ${MAGENTA}${service_cmd}${REG} to restart"
            ;;
    esac

    echo "$service_name $(print_dots "$dots") $(check_service "$service_cmd" "$restart_msg")"
}

# Main script

# Intro
clear
figlet Kukla VM

# VM Details
print_section_header "VM Details"
print_kv_pair "Host Entry" "$ip" "$hosts"

mailhog_port=$(get_mailhog_port)
if [ -n "$mailhog_port" ]; then
    print_kv_pair "Mailhog Inbox" "$base_url:$mailhog_port"
fi

print_kv_pair "Admin URL" "$admin_url"
printf '\n'

print_kv_pair "Storefront URLs" "${storefront_urls[0]}"
for ((i = 1; i < ${#storefront_urls[@]}; i++)); do
    printf '%21s %s\n' "" "${REG}${storefront_urls[i]}"
done
printf "\n\n"

# Service Status
print_section_header "Service Status"
<% if @search_engine_type == "elasticsearch" %>
display_service_status "Elasticsearch" "elasticsearch"
<% end %>
display_service_status "PHP" "php${php_version}-fpm"
display_service_status "Webserver" "nginx"
display_service_status "Database" "mysql"
display_service_status "File Share" "smbd"
display_service_status "Mailbox" "mailhog"
printf "\n\n"

# VM Commands
print_section_header "VM Commands"
echo "Use ${MAGENTA}cli${REG} for a list of VM commands."
printf "\n"
rule

