{
  "$schema": "https://json-schema.org/draft-07/schema#",
  "title": "VM Configuration",
  "required": [
    "vm",
    "application",
    "remote_machine"
  ],
  "type": "object",
  "properties": {
    "vm": {
      "type": "object",
      "description": "VM details, including a unique VM IP and name.",
      "required": [
        "name",
        "provider"
      ],
      "properties": {
        "ip": {
          "type": "string",
          "description": "The unique IP address of the virtual machine. Format: 192.168.xx.xx.\n\nThe first 'xx' is defined by your Virtualbox network adapter. Find it by opening virtualbox and navigating to: File > Host Network Manager > IPv4 Address/Mask.\n\n",
          "pattern": "^\\d{3}.\\d{3}.\\d{2}.\\d{2}$",
          "minLength": 1
        },
        "name": {
          "type": "string",
          "description": "Unique virtual machine name. Only letters, spaces, dashes, and/or underscores.",
          "pattern": "^[a-z0-9A-Z-_\\s]*$",
          "minLength": 1
        },
        "provider": {
          "type": "string",
          "description": "Virtualization provider. Either virtualbox, vmware_fusion, or vmware_desktop.",
          "minLength": 1,
          "pattern": "(^virtualbox$|^vmware_fusion$|^vmware_desktop$)"
        }
      },
      "additionalProperties": false
    },
    "custom_demo": {
      "type": "object",
      "description": "Object which defines application structure, and optional data packs and custom modules.",
      "required": [
        "structure"
      ],
      "properties": {
        "structure": {
          "type": "object",
          "description": "Object which defines application structure.",
          "required": [
            "websites"
          ],
          "properties": {
            "websites": {
              "type": "array",
              "description": "Array of website objects.",
              "minItems": 1,
              "items": {
                "type": "object",
                "description": "Website object which expects a required site code, site url, and an array of stores for the website.",
                "required": [
                  "site_code",
                  "site_url"
                ],
                "properties": {
                  "site_code": {
                    "type": "string",
                    "description": "Site code used in the Magento application. Only letters and underscores allowed.",
                    "pattern": "^[A-Za-z0-9_]+$"
                  },
                  "site_url": {
                    "type": "string",
                    "description": "Site url used to access the website."
                  },
                  "stores": {
                    "type": "array",
                    "description": "Array of store objects.",
                    "minItems": 1,
                    "items": {
                      "type": "object",
                      "description": "Store object which has an array of store views for the store.",
                      "required": [
                        "store_views"
                      ],
                      "properties": {
                        "store_views": {
                          "type": "array",
                          "description": "Array of store views",
                          "minItems": 1,
                          "items": {
                            "type": "object",
                            "description": "Store view object which expects a required store view code and an optional store view url.",
                            "required": [
                              "store_view_code"
                            ],
                            "properties": {
                              "store_view_code": {
                                "type": "string",
                                "description": "Store view code used by Magento. Only letters and underscores allowed.",
                                "pattern": "^[A-Za-z0-9_]+$"
                              },
                              "store_view_url": {
                                "type": "string",
                                "description": "URL used to access the store view."
                              }
                            },
                            "additionalProperties": false
                          }
                        }
                      },
                      "additionalProperties": false
                    }
                  }
                },
                "additionalProperties": false
              }
            }
          },
          "additionalProperties": false
        },
        "data_packs": {
          "type": "array",
          "description": "Array of data pack objects.",
          "items": {
            "type": "object",
            "description": "Data pack object that expects a source and an array of data paths.",
            "required": [
              "source",
              "data"
            ],
            "properties": {
              "source": {
                "type": "string",
                "description": "The data pack folder name or github url of the data pack."
              },
              "version": {
                "type": "string",
                "description": "The data pack github branch. Defaults to dev-master"
              },
              "data": {
                "type": "array",
                "description": "Array of data objects which contain data pack details.",
                "minItems": 1,
                "items": {
                  "type": "object",
                  "description": "Data path object that defines the folder names that contain data pack csv files.",
                  "required": [
                    "data_path"
                  ],
                  "properties": {
                    "data_path": {
                      "type": "string",
                      "description": "Folder that contains data pack csv files."
                    }
                  },
                  "additionalProperties": false
                }
              }
            },
            "additionalProperties": false
          }
        },
        "custom_modules": {
          "type": "array",
          "description": "Array of custom module objects.",
          "items": {
            "type": "object",
            "description": "Custom module object that expects a source and an optional version.",
            "required": [
              "source"
            ],
            "properties": {
              "source": {
                "type": "string",
                "description": "Github url or package name (vendor/module) of the module."
              },
              "version": {
                "type": "string",
                "description": "The version of the module."
              },
              "reference": {
                "type": "string",
                "description": "An optional commit hash."
              }
            },
            "additionalProperties": false
          }
        }
      },
      "additionalProperties": false
    },
    "application": {
      "type": "object",
      "description": "Object for all application-related settings.",
      "required": [
        "authentication"
      ],
      "properties": {
        "authentication": {
          "type": "object",
          "description": "Object for composer and commerce services credentials.",
          "required": [
            "composer"
          ],
          "properties": {
            "composer": {
              "type": "object",
              "description": "Composer credentials object.",
              "required": [
                "public_key",
                "private_key",
                "github_token"
              ],
              "properties": {
                "public_key": {
                  "type": "string",
                  "description": "Composer public key.",
                  "minLength": 1
                },
                "private_key": {
                  "type": "string",
                  "description": "Composer private key.",
                  "minLength": 1
                },
                "github_token": {
                  "type": "string",
                  "description": "Github OAuth token.",
                  "minLength": 1
                }
              },
              "additionalProperties": false
            },
            "commerce_services": {
              "type": "object",
              "description": "Commerce services credentials object.",
              "required": [
                "production_api_key"
              ],
              "properties": {
                "production_api_key": {
                  "type": "string",
                  "description": "Commerce services production api key.",
                  "minLength": 1
                },
                "project_id": {
                  "type": "string",
                  "description": "Commerce services project ID.",
                  "minLength": 1
                },
                "data_space_id": {
                  "type": "string",
                  "description": "Commerce services data space ID.",
                  "minLength": 1
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "options": {
          "type": "object",
          "description": "Object for application options including: family, version, and minimum stability.",
          "required": [
            "version"
          ],
          "properties": {
            "family": {
              "type": "string",
              "description": "The family of Adobe Commerce to install.  Either Commerce or Open Source.",
              "pattern": "(^Commerce$|^Open Source$)",
              "minLength": 1
            },
            "version": {
              "type": "string",
              "description": "The version of Adobe Commerce to install.",
              "pattern": "^\\d.\\d.\\d(-p\\d+)?$",
              "minLength": 1
            },
            "minimum_stability": {
              "type": "string",
              "description": "The minimum stability setting to install. (alpha, beta, or stable)",
              "pattern": "(^alpha$|^beta$|^stable$)",
              "minLength": 1
            }
          },
          "additionalProperties": false
        },
        "build": {
          "type": "object",
          "description": "Object for build-specific settings including: action, restore, sample data, patches, and hooks.",
          "minLength": 1,
          "required": [
            "action"
          ],
          "properties": {
            "action": {
              "type": "string",
              "description": "Build action for the project.\ninstall: First-time install.\nforce_install: Complete VM re-build.\nreinstall: Reinstall the application.\nupdate_all: Update application and data packs.\nupdate_app: Update the application only.\nupdate_data: Update data packs only.\nupdate_urls: Update urls only.\nrestore: Restore backup.",
              "pattern": "(^install$|^force_install$|^reinstall$|^update_all$|^update_app$|^update_data$|^update_urls$|^restore$)"
            },
            "restore": {
              "type": [
                "string",
                "object"
              ],
              "description": "Restore mode for a backup.\n\nseparate: Restores a backup and ignores config.json settings.\nmerge: Restores a backup and includes everything in config.json.",
              "required": [
                "mode"
              ],
              "minLength": 1,
              "pattern": "(^merge$|^separate$)",
              "properties": {
                "mode": {
                  "type": "string",
                  "description": "Restore mode for a backup.\n\nseparate: Restores a backup and ignores config.json settings.\nmerge: Restores a backup and includes everything in config.json.",
                  "minLength": 1,
                  "pattern": "(^merge$|^separate$)"
                },
                "source": {
                  "type": "string",
                  "description": "Github url for a remote backup.",
                  "minLength": 1
                }
              },
              "additionalProperties": false
            },
            "repositories_to_remove": {
              "type": "array",
              "description": "Array of repository objects.",
              "minItems": 1,
              "items": {
                "type": "object",
                "description": "Custom module repository object that expects a source.",
                "required": [
                  "source"
                ],
                "properties": {
                  "source": {
                    "type": "string",
                    "description": "String of a repository key to remove (typically vendor/module, but may also be a number)."
                  }
                },
                "additionalProperties": false
              }
            },
            "modules_to_remove": {
              "type": "array",
              "description": "Array of module objects.",
              "minItems": 1,
              "items": {
                "type": "object",
                "description": "Custom module object that expects a source.",
                "required": [
                  "source"
                ],
                "properties": {
                  "source": {
                    "type": "string",
                    "description": "Package name of module to remove (vendor/module).",
                    "pattern": "^[a-z0-9]([_.-]?[a-z0-9]+)*/[a-z0-9](([_.]?|-{0,2})[a-z0-9]+)*$"
                  }
                },
                "additionalProperties": false
              }
            },
            "sample_data": {
              "type": "boolean",
              "description": "Include sample data or not? Either true or false."
            },
            "deploy_mode": {
              "type": [
                "string",
                "boolean",
                "object"
              ],
              "description": "Deploy mode for the build.  (Either a string (production or developer), a boolean (true for production, false to skip), or an object with additional settings.",
              "required": [
                "apply",
                "mode"
              ],
              "minLength": 1,
              "pattern": "(^production$|^developer$)",
              "properties": {
                "apply": {
                  "type": "boolean",
                  "description": "Apply deploy mode? Either true or false."
                },
                "mode": {
                  "type": "string",
                  "description": "Deploy mode. Either production or developer. Defaults to production.",
                  "minLength": 1,
                  "pattern": "(^production$|^developer$)"
                }
              },
              "additionalProperties": false
            },
            "patches": {
              "type": [
                "object",
                "boolean"
              ],
              "description": "Whether to install patches and/or patches settings.  Either true, false, or an object with additional settings.",
              "required": [
                "apply"
              ],
              "properties": {
                "apply": {
                  "type": "boolean",
                  "description": "Apply patches? Either true or false."
                },
                "source": {
                  "type": "string",
                  "description": "Github url for a personal patches repository.",
                  "minLength": 1
                },
                "branch": {
                  "type": "string",
                  "description": "Personal patches respository branch.",
                  "minLength": 1
                },
                "repository_directory": {
                  "type": "string",
                  "description": "Directory in the personal patches repository that contains patches.",
                  "minLength": 1
                },
                "codebase_directory": {
                  "type": "string",
                  "description": "Directory in the codebase where patches will be stored.  Usually m2-hotfixes.",
                  "minLength": 1
                }
              },
              "additionalProperties": false
            },
            "add_required_modules": {
              "type": "boolean",
              "description": "Automatically add required modules or not? Either true or false."
            },
            "hooks": {
              "type": "object",
              "description": "Build hooks which run at the end of the build.  Includes: warm_cache, enable_media_gallery, and an array of custom VM or Magento CLI commands.",
              "properties": {
                "warm_cache": {
                  "type": "boolean",
                  "description": "Warm the cache? Either true or false."
                },
                "backup": {
                  "type": "boolean",
                  "description": "Take a backup of the build? Either true or false."
                },
                "sync_media_gallery": {
                  "type": "boolean",
                  "description": "Sync the media gallery? (Unnecessary for newer builds, or 2.3.4 or lower). Either true or false."
                },
                "commands": {
                  "type": "array",
                  "description": "An array of custom VM or Magento CLI commands.",
                  "minItems": 0
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "settings": {
          "type": "object",
          "description": "Object for Adobe Commerce installation setting overrides.",
          "properties": {
            "backend_frontname": {
              "type": "string",
              "description": "Custom admin path for Adobe Commerce admin panel."
            },
            "language": {
              "type": "string",
              "description": "Default language country code. (Defaults to en_US).",
              "pattern": "[a-z]{2}_[A-Z]{2}",
              "minLength": 5,
              "maxLength": 5
            },
            "currency": {
              "type": "string",
              "description": "Default currency (USD).",
              "pattern": "[A-Z]{3}",
              "minLength": 3,
              "maxLength": 3
            },
            "admin_user": {
              "type": "string",
              "description": "Admin username.",
              "minLength": 1
            },
            "admin_password": {
              "type": "string",
              "description": "Admin password.",
              "minLength": 1
            },
            "admin_email": {
              "type": "string",
              "description": "Admin email.",
              "minLength": 1,
              "format": "email"
            },
            "admin_firstname": {
              "type": "string",
              "description": "Admin user's first name.",
              "minLength": 1
            },
            "admin_lastname": {
              "type": "string",
              "description": "Admin user's last name.",
              "minLength": 1
            },
            "use_secure_frontend": {
              "type": "boolean",
              "description": "Use https:// for the storefront? Either true or false."
            },
            "use_secure_admin": {
              "type": "boolean",
              "description": "Use https:// for the admin panel? Either true or false."
            },
            "encryption_key": {
              "type": "string",
              "description": "32 character AES-256 encryption key.",
              "minLength": 32,
              "maxLength": 32
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    "infrastructure": {
      "type": "object",
      "description": "Infrastructure settings for PHP, Composer, a Search Engine, and Samba.",
      "properties": {
        "os": {
          "type": "object",
          "description": "Object containing operating system settings.",
          "properties": {
            "update": {
              "type": "boolean",
              "description": "Update the operating system? Either true or false."
            },
            "timezone": {
              "type": "string",
              "description": "Preferred timezone for the operating system.",
              "markdownDescription": "For timezone name options, use a value from the 'TZ database name' column in the following list:\n\n [Timezone Database Names](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)",
              "minLength": 1
            }
          }
        },
        "php": {
          "type": [
            "string",
            "object"
          ],
          "description": "PHP version or an object containing PHP settings.",
          "minLength": 3,
          "required": [
            "version"
          ],
          "pattern": "^\\d.\\d$",
          "properties": {
            "version": {
              "type": "string",
              "description": "PHP version.",
              "minLength": 3,
              "pattern": "^\\d.[0-9]$"
            },
            "memory_limit": {
              "type": "string",
              "description": "PHP memory limit.",
              "minLength": 2,
              "pattern": "^\\d+(M|G)$"
            },
            "upload_max_filesize": {
              "type": "string",
              "description": "PHP maximum upload file size limit.  Increase this to upload larger images and files via the Adobe Commerce admin panel.",
              "minLength": 2,
              "pattern": "^\\d+(M|G)$"
            },
            "post_max_size": {
              "type": "string",
              "description": "PHP maximum post size limit.  Increase this to upload larger files via file uploaders via the Adobe Commerce admin panel.",
              "minLength": 2,
              "pattern": "^\\d+(M|G)$"
            }
          },
          "additionalProperties": false
        },
        "composer": {
          "type": [
            "string",
            "object"
          ],
          "description": "Composer version or an object containing Composer settings.",
          "minLength": 1,
          "required": [
            "version"
          ],
          "pattern": "^1.10.21$|^latest$",
          "properties": {
            "version": {
              "type": "string",
              "description": "Composer version. Use either latest or 1.10.21"
            },
            "clear_cache": {
              "type": "boolean",
              "description": "Clear composer cache? Either true or false."
            },
            "allowed_plugins": {
              "type": "array",
              "description": "Array of composer module objects.",
              "minItems": 1,
              "items": {
                "type": "object",
                "description": "Composer module object which expects a required source and status.",
                "required": [
                  "source",
                  "status"
                ],
                "properties": {
                  "source": {
                    "type": "string",
                    "description": "Module string to allow or deny."
                  },
                  "status": {
                    "type": "boolean",
                    "description": "True to allow the module, false to deny it."
                  }
                },
                "additionalProperties": false
              }
            }
          },
          "additionalProperties": false
        },
        "database": {
          "type": [
            "string",
            "object"
          ],
          "description": "Database name (defaults to magento) or an object with database settings.",
          "minLength": 1,
          "properties": {
            "version": {
              "type": "string",
              "description": "MySQL version (e.g. 8.0.0)",
              "minLength": 1
            },
            "db_host": {
              "type": "string",
              "description": "Database host.",
              "minLength": 1
            },
            "db_name": {
              "type": "string",
              "description": "Database name. Defaults to magento.",
              "minLength": 1
            },
            "db_user": {
              "type": "string",
              "description": "Database user. Defaults to magento.",
              "minLength": 1
            },
            "db_password": {
              "type": "string",
              "description": "Database password. Defaults to password.",
              "minLength": 1
            }
          },
          "additionalProperties": false
        },
        "web_server": {
          "type": "object",
          "description": "Web server port (defaults to 80) or an object containing web server settings.",
          "minLength": 2,
          "properties": {
            "client_max_body_size": {
              "type": "string",
              "description": "Web server client max body size. Defaults to 100M.  (Change this if you need to upload very large images).",
              "minLength": 2,
              "pattern": "^\\d+(M)$"
            }
          },
          "additionalProperties": false
        },
        "search_engine": {
          "type": [
            "string",
            "object"
          ],
          "description": "Search engine string (either elasticsearch, live_search, or mysql) or an object containing search engine settings.",
          "minLength": 1,
          "pattern": "^elasticsearch$|^live_search$|^mysql$",
          "required": [
            "type"
          ],
          "properties": {
            "type": {
              "type": "string",
              "description": "Search engine (either elasticsearch or live_search).",
              "minLength": 1,
              "pattern": "^elasticsearch$|^live_search$|^mysql"
            },
            "host": {
              "type": "string",
              "description": "Host IP address. (Local: 10.0.2.2, In-VM: 127.0.0.1) ",
              "minLength": 1,
              "pattern": "^10.0.2.2$|^127.0.0.1$"
            },
            "version": {
              "type": "string",
              "description": "Elasticsearch version family. (Ex. 7.x).",
              "minLength": 3,
              "pattern": "^\\d+(.x)$"
            },
            "memory": {
              "type": "string",
              "description": "How much of the VM memory to use for Elasticsearch in gigabytes. (Ex. 2G).",
              "minLength": 2,
              "pattern": "^\\d+(G)$"
            },
            "wipe": {
              "type": "boolean",
              "description": "Wipes the local elasticsearch instance before building the VM."
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    "provisioner": {
      "type": "object",
      "description": "Provisioner settings, e.g. chef type and chef version.",
      "properties": {
        "type": {
          "type": "string",
          "description": "Chef provisioner type, either chef_solo or chef_zero. Defaults to chef_zero.",
          "pattern": "^chef_solo$|^chef_zero$"
        },
        "version": {
          "type": "string",
          "description": "Chef version number. Currently defaults to 18.1.0"
        },
        "install": {
          "type": "boolean",
          "description": "Whether the provisioner should attempt to check for itself on the guest"
        }
      },
      "additionalProperties": false
    },
    "remote_machine": {
      "type": "object",
      "description": "Object containing settings for VM machine.",
      "required": [
        "cpus",
        "memory"
      ],
      "properties": {
        "cpus": {
          "type": "string",
          "description": "The number of host machine cpu cores that a VM can access.  Recommended is 2. Maximum should be half the number of total cpus.",
          "minLength": 1,
          "maxLength": 1
        },
        "memory": {
          "type": "string",
          "description": "The amount of host memory the VM can use in megabytes. Suggested: 8192.",
          "minLength": 4
        },
        "gui": {
          "type": "boolean",
          "description": "Whether to show the VM when it boots.  Defaults to false. Set to true in order for VM to show in the Library in VMWare Fusion."
        },
        "base_box": {
          "type": "string",
          "description": "The box template Vagrant will use to create the VM via the specified provider.",
          "minLength": 1
        }
      },
      "additionalProperties": false
    }
  },
  "additionalProperties": false
}